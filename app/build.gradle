apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    namespace = "in.keatz.components"
    compileSdk 35
    defaultConfig {
        applicationId "in.keatz.components"
        minSdkVersion 25
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        buildConfig true
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "DEBUG_MODE", "true"
        }
        release {
            buildConfigField "boolean", "DEBUG_MODE", "false"
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation("androidx.cardview:cardview:1.0.0")
    implementation("androidx.recyclerview:recyclerview:1.4.0")
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Lifecycle Components (ViewModel, LiveData)
    implementation 'androidx.lifecycle:lifecycle-runtime:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.6.2'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.6.2'

    // Networking (Retrofit, OkHttp)
    implementation("com.squareup.retrofit2:retrofit:${rootProject.retrofit}")
    implementation("com.squareup.retrofit2:converter-gson:${rootProject.retrofitGsonConverter}")
    implementation("com.squareup.okhttp3:logging-interceptor:${rootProject.okHttpLoggingInterceptor}")
    implementation("com.squareup.okhttp3:okhttp:${rootProject.okHttp}")

    // Reactive Programming (RxJava)
    implementation("io.reactivex.rxjava2:rxjava:${rootProject.rxJava2Version}")
    implementation("io.reactivex.rxjava2:rxandroid:${rootProject.rxAndroid2Version}")

    // Testing
    testImplementation("junit:junit:${rootProject.junitVersion}")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
